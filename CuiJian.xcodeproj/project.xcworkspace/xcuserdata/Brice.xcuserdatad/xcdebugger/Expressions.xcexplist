<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "CardCollectionViewCell.setCellData(News) -&gt; ():CardCollectionViewCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "news.feature_image">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "-[NewsViewController collectionView:numberOfItemsInSection:]:NewsViewController.m">
         <PersistentStrings>
            <PersistentString
               value = "self.dataArray.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AppDelegate.application(UIApplication, supportedInterfaceOrientationsForWindow : UIWindow?) -&gt; UIInterfaceOrientationMask:AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "UIApplication.sharedApplication().keyWindow!">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "__30-[NewsViewController makeData]_block_invoke_2:NewsViewController.m">
      </ContextState>
      <ContextState
         contextName = "TimeLineViewController.initRule() -&gt; ():TimeLineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.rulerView.frame.height">
            </PersistentString>
            <PersistentString
               value = "3.5 * width + DTRulerScaleGap / 2 + 1 - 0.5 * UIScreen.mainScreen().bounds.size.width">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GameViewController.addSCN(String) -&gt; SCNNode:GameViewController.swift">
      </ContextState>
      <ContextState
         contextName = "CardCollectionViewLayout.layoutAttributesForElementsInRect(CGRect) -&gt; [UICollectionViewLayoutAttributes]?:CardCollectionViewLayout.swift">
         <PersistentStrings>
            <PersistentString
               value = "array!.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GameViewController.renderer(SCNSceneRenderer, updateAtTime : Double) -&gt; ():GameViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.ufoNode?.rotation.y">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimeLineViewController.scrollViewDidScroll(UIScrollView) -&gt; ():TimeLineViewController.swift">
      </ContextState>
      <ContextState
         contextName = "GameViewController.stopAnimation(SCNNode) -&gt; ():GameViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "node.paused">
            </PersistentString>
            <PersistentString
               value = "animation!">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "-[NewsDetailController tableView:heightForRowAtIndexPath:]:NewsDetailController.m">
         <PersistentStrings>
            <PersistentString
               value = "_webView.frame.size.height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimeLineViewController.makeCollectionCenter() -&gt; ():TimeLineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.collectionView.contentInset.top">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TimeLineViewController.makeCenter() -&gt; ():TimeLineViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.rulerView.contentInset">
            </PersistentString>
            <PersistentString
               value = "-CGFloat(3.5) * width - DTRulerScaleGap / 2 - 1 + 0.5 * UIScreen.mainScreen().bounds.size.width">
            </PersistentString>
            <PersistentString
               value = "self.rulerView.contentOffset.x">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
